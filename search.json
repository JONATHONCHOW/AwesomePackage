[{"path":"https://jonathonchow.github.io/AwesomePackage/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 AwesomePackage authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://jonathonchow.github.io/AwesomePackage/articles/psd_fit.html","id":"psd-model-and-data","dir":"Articles","previous_headings":"","what":"PSD model and data","title":"Fit PSD model","text":"consider first chromosome data 1000 Genomes Project use PSD model fit data.","code":"library(AwesomePackage) data(genome_chr1)"},{"path":"https://jonathonchow.github.io/AwesomePackage/articles/psd_fit.html","id":"fit-psd-model-by-em-algorithm","dir":"Articles","previous_headings":"","what":"Fit PSD model by EM algorithm","title":"Fit PSD model","text":"fit PSD model EM algorithm, use loss function stopping criterion. plot loss function number iterations.  plot ancestral proportions individuals using package ggplot2.","code":"result_em <- psd_fit_em(genome_chr1, 3) L_em <- result_em$\"Loss\" plot(L_em) P_em <- result_em$\"P\" topics <- order(colMeans(P_em)) colors <- c(\"red\", \"yellow\", \"blue\") structure_plot(P_em, topics, colors)"},{"path":"https://jonathonchow.github.io/AwesomePackage/articles/psd_fit.html","id":"fit-psd-model-by-sqp-algorithm","dir":"Articles","previous_headings":"","what":"Fit PSD model by SQP algorithm","title":"Fit PSD model","text":"fit PSD model SQP algorithm, use loss function stopping criterion. plot loss function number iterations.  plot ancestral proportions individuals using package ggplot2.","code":"result_sqp <- psd_fit_sqp(genome_chr1, 3) L_sqp <- result_sqp$\"Loss\" plot(L_sqp) P_sqp <- result_sqp$\"P\" topics <- order(colMeans(P_sqp)) colors <- c(\"red\", \"yellow\", \"blue\") structure_plot(P_sqp, topics, colors)"},{"path":"https://jonathonchow.github.io/AwesomePackage/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Jonathon Chow. Author, maintainer.","code":""},{"path":"https://jonathonchow.github.io/AwesomePackage/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Chow J (2022). AwesomePackage: Infer ancestry models fit models algorithms. https://github.com/JONATHONCHOW/AwesomePackage, https://jonathonchow.github.io/AwesomePackage/.","code":"@Manual{,   title = {AwesomePackage: Infer ancestry with some models and fit those models with some algorithms},   author = {Jonathon Chow},   year = {2022},   note = {https://github.com/JONATHONCHOW/AwesomePackage, https://jonathonchow.github.io/AwesomePackage/}, }"},{"path":"https://jonathonchow.github.io/AwesomePackage/index.html","id":"awesomepackage","dir":"","previous_headings":"","what":"Infer ancestry with some models and fit those models with some algorithms","title":"Infer ancestry with some models and fit those models with some algorithms","text":"goal AwesomePackage infer ancestry models fit models algorithms. use classical PSD model ancestor inference, widely used, ADMIXTURE, FRAPPE. illustrate close relationship PSD model, Poisson NMF model multinomial topic model, can optimize algorithm. use Expectation-Maximization algorithm (EM), co-ordinate descent algorithm (CD), sequential quadratic programming algorithm (SQP) stochastic variational inference algorithm (SVI) fit model, illustrate differences algorithms simulation experiments real data experiments.","code":""},{"path":"https://jonathonchow.github.io/AwesomePackage/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Infer ancestry with some models and fit those models with some algorithms","text":"can install development version AwesomePackage GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"JONATHONCHOW/AwesomePackage\")"},{"path":"https://jonathonchow.github.io/AwesomePackage/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Infer ancestry with some models and fit those models with some algorithms","text":"can see examples Vignettes.","code":""},{"path":"https://jonathonchow.github.io/AwesomePackage/reference/genome_chr1.html","id":null,"dir":"Reference","previous_headings":"","what":"First chromosome data from the 1000 Genomes Project — genome_chr1","title":"First chromosome data from the 1000 Genomes Project — genome_chr1","text":"1000 Genomes Project created catalogue common human genetic variation, using openly consented samples people declared healthy. reference data resources generated project remain heavily used biomedical science community. International Genome Sample Resource (IGSR) maintains shares human genetic variation resources built 1000 Genomes Project. also update resources current reference assembly, add new data sets generated 1000 Genomes Project samples add data projects working openly consented samples.","code":""},{"path":"https://jonathonchow.github.io/AwesomePackage/reference/genome_chr1.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"First chromosome data from the 1000 Genomes Project — genome_chr1","text":"genome_chr1 1092 x 50000 matrix.","code":""},{"path":"https://jonathonchow.github.io/AwesomePackage/reference/genome_chr1.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"First chromosome data from the 1000 Genomes Project — genome_chr1","text":"https://www.internationalgenome.org/","code":""},{"path":"https://jonathonchow.github.io/AwesomePackage/reference/hello_world.html","id":null,"dir":"Reference","previous_headings":"","what":"Hello world — hello_world","title":"Hello world — hello_world","text":"Hello world add \"AwesomePackage\" NAMESPACE.","code":""},{"path":"https://jonathonchow.github.io/AwesomePackage/reference/hello_world.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Hello world — hello_world","text":"","code":"hello_world()"},{"path":"https://jonathonchow.github.io/AwesomePackage/reference/hello_world.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Hello world — hello_world","text":"string \"Data science fantastic!\".","code":""},{"path":"https://jonathonchow.github.io/AwesomePackage/reference/hello_world.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Hello world — hello_world","text":"","code":"hello_world() #> [1] \"Data science is fantastic!\""},{"path":"https://jonathonchow.github.io/AwesomePackage/reference/psd_fit_em.html","id":null,"dir":"Reference","previous_headings":"","what":"Use EM algorithm to fit PSD model — psd_fit_em","title":"Use EM algorithm to fit PSD model — psd_fit_em","text":"Fit PSD model EM algorithm, use loss function stopping criterion.","code":""},{"path":"https://jonathonchow.github.io/AwesomePackage/reference/psd_fit_em.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Use EM algorithm to fit PSD model — psd_fit_em","text":"","code":"psd_fit_em(G, K, epsilon = 0.1, maxiter = 500)"},{"path":"https://jonathonchow.github.io/AwesomePackage/reference/psd_fit_em.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Use EM algorithm to fit PSD model — psd_fit_em","text":"G x J matrix counts; entries G taken {0,1,2}. K integer 2 greater giving matrix rank. epsilon Convergence criterion. maxiter maximum number iterations.","code":""},{"path":"https://jonathonchow.github.io/AwesomePackage/reference/psd_fit_em.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Use EM algorithm to fit PSD model — psd_fit_em","text":"List following parameters: P population scale matrix individuals. F gene scale matrix populations. Loss vector length Iterations + 1 represents value loss function iteration. Iterations integer represents number iterations.","code":""},{"path":"https://jonathonchow.github.io/AwesomePackage/reference/psd_fit_em.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Use EM algorithm to fit PSD model — psd_fit_em","text":"","code":"G <- matrix(c(0,0,1, 0,2,1, 1,0,1, 0,1,0, 1,0,0), 3, 5) psd_fit_em(G, 2, 1e-1, 10) #> $P #>           [,1]        [,2] #> [1,] 0.1242187 0.875781250 #> [2,] 0.9924491 0.007550917 #> [3,] 0.3980382 0.601961817 #>  #> $F #>             [,1]        [,2]       [,3]         [,4]         [,5] #> [1,] 0.009544634 0.992687269 0.01313828 3.521855e-01 8.472985e-06 #> [2,] 0.318496418 0.004320086 0.66651509 1.897806e-07 3.690378e-01 #>  #> $Loss #>  [1] -29.56637 -16.87434 -15.95061 -15.59415 -15.05905 -14.19749 -13.13806 #>  [8] -12.21823 -11.60489 -11.24347 -11.03649 #>  #> $Iterations #> [1] 10 #>"},{"path":"https://jonathonchow.github.io/AwesomePackage/reference/psd_fit_sqp.html","id":null,"dir":"Reference","previous_headings":"","what":"Use SQP algorithm to fit PSD model — psd_fit_sqp","title":"Use SQP algorithm to fit PSD model — psd_fit_sqp","text":"Fit PSD model SQP algorithm, use loss function stopping criterion.","code":""},{"path":"https://jonathonchow.github.io/AwesomePackage/reference/psd_fit_sqp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Use SQP algorithm to fit PSD model — psd_fit_sqp","text":"","code":"psd_fit_sqp(G, K, epsilon = 0.1, maxiter = 500, initem = 10)"},{"path":"https://jonathonchow.github.io/AwesomePackage/reference/psd_fit_sqp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Use SQP algorithm to fit PSD model — psd_fit_sqp","text":"G x J matrix counts; entries G taken {0,1,2}. K integer 2 greater giving matrix rank. epsilon Convergence criterion. maxiter maximum number iterations. initem number iterations using EM algorithm initialization.","code":""},{"path":"https://jonathonchow.github.io/AwesomePackage/reference/psd_fit_sqp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Use SQP algorithm to fit PSD model — psd_fit_sqp","text":"List following parameters: P population scale matrix individuals. F gene scale matrix populations. Loss vector length Iterations + 1 represents value loss function iteration. Iterations integer represents number iterations.","code":""},{"path":"https://jonathonchow.github.io/AwesomePackage/reference/psd_fit_sqp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Use SQP algorithm to fit PSD model — psd_fit_sqp","text":"","code":"G <- matrix(c(0,0,1, 0,2,1, 1,0,1, 0,1,0, 1,0,0), 3, 5) psd_fit_sqp(G, 2, 1e-1, 10, 1) #> $P #>             [,1]        [,2] #> [1,] 0.999999999 0.000000001 #> [2,] 0.000000001 0.999999999 #> [3,] 0.687924445 0.312075555 #>  #> $F #>             [,1]  [,2]        [,3]        [,4]        [,5] #> [1,] 0.276658129 1e-09 0.574285356 0.000000001 0.310944840 #> [2,] 0.000000001 1e+00 0.000000001 0.413007578 0.000000001 #>  #> $Loss #> [1] -16.27993 -11.42088 -10.62177 -10.61139 #>  #> $Iterations #> [1] 3 #>"},{"path":"https://jonathonchow.github.io/AwesomePackage/reference/structure_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the ancestral proportions — structure_plot","title":"Plot the ancestral proportions — structure_plot","text":"Plot ancestral proportions individuals using package ggplot2.","code":""},{"path":"https://jonathonchow.github.io/AwesomePackage/reference/structure_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the ancestral proportions — structure_plot","text":"","code":"structure_plot(L, topics, colors, ticks = NULL, font.size = 9)"},{"path":"https://jonathonchow.github.io/AwesomePackage/reference/structure_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the ancestral proportions — structure_plot","text":"L proportion matrix. topics Topic order options. colors Theme color options. ticks Grouping options. font.size Font size used plot.","code":""},{"path":"https://jonathonchow.github.io/AwesomePackage/reference/structure_plot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot the ancestral proportions — structure_plot","text":"","code":"P <- matrix(c(0.5,0.3,0.8, 0.5,0.7,0.2), 3, 2) topics <- order(colMeans(P)) colors <- c(\"red\", \"yellow\") structure_plot(P, topics, colors)"}]
