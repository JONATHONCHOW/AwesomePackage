// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppEigen.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// rcpp_hello_world
Rcpp::String rcpp_hello_world();
RcppExport SEXP _AwesomePackage_rcpp_hello_world() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(rcpp_hello_world());
    return rcpp_result_gen;
END_RCPP
}
// rcpp_update_p_em
Eigen::MatrixXd rcpp_update_p_em(const Eigen::MatrixXd& G, const Eigen::MatrixXd& P, const Eigen::MatrixXd& F);
RcppExport SEXP _AwesomePackage_rcpp_update_p_em(SEXP GSEXP, SEXP PSEXP, SEXP FSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Eigen::MatrixXd& >::type G(GSEXP);
    Rcpp::traits::input_parameter< const Eigen::MatrixXd& >::type P(PSEXP);
    Rcpp::traits::input_parameter< const Eigen::MatrixXd& >::type F(FSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_update_p_em(G, P, F));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_update_f_em
Eigen::MatrixXd rcpp_update_f_em(const Eigen::MatrixXd& G, const Eigen::MatrixXd& P, const Eigen::MatrixXd& F);
RcppExport SEXP _AwesomePackage_rcpp_update_f_em(SEXP GSEXP, SEXP PSEXP, SEXP FSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Eigen::MatrixXd& >::type G(GSEXP);
    Rcpp::traits::input_parameter< const Eigen::MatrixXd& >::type P(PSEXP);
    Rcpp::traits::input_parameter< const Eigen::MatrixXd& >::type F(FSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_update_f_em(G, P, F));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_psd_loss
double rcpp_psd_loss(const Eigen::MatrixXd& G, const Eigen::MatrixXd& P, const Eigen::MatrixXd& F);
RcppExport SEXP _AwesomePackage_rcpp_psd_loss(SEXP GSEXP, SEXP PSEXP, SEXP FSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Eigen::MatrixXd& >::type G(GSEXP);
    Rcpp::traits::input_parameter< const Eigen::MatrixXd& >::type P(PSEXP);
    Rcpp::traits::input_parameter< const Eigen::MatrixXd& >::type F(FSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_psd_loss(G, P, F));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_update_p_sqp
Eigen::MatrixXd rcpp_update_p_sqp(const Eigen::MatrixXd& G, const Eigen::MatrixXd& P, const Eigen::MatrixXd& F, const double& zero);
RcppExport SEXP _AwesomePackage_rcpp_update_p_sqp(SEXP GSEXP, SEXP PSEXP, SEXP FSEXP, SEXP zeroSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Eigen::MatrixXd& >::type G(GSEXP);
    Rcpp::traits::input_parameter< const Eigen::MatrixXd& >::type P(PSEXP);
    Rcpp::traits::input_parameter< const Eigen::MatrixXd& >::type F(FSEXP);
    Rcpp::traits::input_parameter< const double& >::type zero(zeroSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_update_p_sqp(G, P, F, zero));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_update_f_sqp
Eigen::MatrixXd rcpp_update_f_sqp(const Eigen::MatrixXd& G, const Eigen::MatrixXd& P, const Eigen::MatrixXd& F, const double& zero);
RcppExport SEXP _AwesomePackage_rcpp_update_f_sqp(SEXP GSEXP, SEXP PSEXP, SEXP FSEXP, SEXP zeroSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Eigen::MatrixXd& >::type G(GSEXP);
    Rcpp::traits::input_parameter< const Eigen::MatrixXd& >::type P(PSEXP);
    Rcpp::traits::input_parameter< const Eigen::MatrixXd& >::type F(FSEXP);
    Rcpp::traits::input_parameter< const double& >::type zero(zeroSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_update_f_sqp(G, P, F, zero));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_update_pp
Eigen::MatrixXd rcpp_update_pp(const Eigen::MatrixXd& G, const Eigen::MatrixXd& ZP, const Eigen::MatrixXd& ZaF, const Eigen::MatrixXd& ZbF, const Eigen::MatrixXd& ALPHA);
RcppExport SEXP _AwesomePackage_rcpp_update_pp(SEXP GSEXP, SEXP ZPSEXP, SEXP ZaFSEXP, SEXP ZbFSEXP, SEXP ALPHASEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Eigen::MatrixXd& >::type G(GSEXP);
    Rcpp::traits::input_parameter< const Eigen::MatrixXd& >::type ZP(ZPSEXP);
    Rcpp::traits::input_parameter< const Eigen::MatrixXd& >::type ZaF(ZaFSEXP);
    Rcpp::traits::input_parameter< const Eigen::MatrixXd& >::type ZbF(ZbFSEXP);
    Rcpp::traits::input_parameter< const Eigen::MatrixXd& >::type ALPHA(ALPHASEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_update_pp(G, ZP, ZaF, ZbF, ALPHA));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_update_ff
Rcpp::List rcpp_update_ff(const Eigen::MatrixXd& G, const Eigen::MatrixXd& ZP, const Eigen::MatrixXd& ZaF, const Eigen::MatrixXd& ZbF, const Eigen::MatrixXd& BETAa, const Eigen::MatrixXd& BETAb);
RcppExport SEXP _AwesomePackage_rcpp_update_ff(SEXP GSEXP, SEXP ZPSEXP, SEXP ZaFSEXP, SEXP ZbFSEXP, SEXP BETAaSEXP, SEXP BETAbSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Eigen::MatrixXd& >::type G(GSEXP);
    Rcpp::traits::input_parameter< const Eigen::MatrixXd& >::type ZP(ZPSEXP);
    Rcpp::traits::input_parameter< const Eigen::MatrixXd& >::type ZaF(ZaFSEXP);
    Rcpp::traits::input_parameter< const Eigen::MatrixXd& >::type ZbF(ZbFSEXP);
    Rcpp::traits::input_parameter< const Eigen::MatrixXd& >::type BETAa(BETAaSEXP);
    Rcpp::traits::input_parameter< const Eigen::MatrixXd& >::type BETAb(BETAbSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_update_ff(G, ZP, ZaF, ZbF, BETAa, BETAb));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_marginal_likelihood_e1
double rcpp_marginal_likelihood_e1(const Eigen::MatrixXd& G, const Eigen::MatrixXd& ZP, const Eigen::MatrixXd& ZaF, const Eigen::MatrixXd& ZbF);
RcppExport SEXP _AwesomePackage_rcpp_marginal_likelihood_e1(SEXP GSEXP, SEXP ZPSEXP, SEXP ZaFSEXP, SEXP ZbFSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Eigen::MatrixXd& >::type G(GSEXP);
    Rcpp::traits::input_parameter< const Eigen::MatrixXd& >::type ZP(ZPSEXP);
    Rcpp::traits::input_parameter< const Eigen::MatrixXd& >::type ZaF(ZaFSEXP);
    Rcpp::traits::input_parameter< const Eigen::MatrixXd& >::type ZbF(ZbFSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_marginal_likelihood_e1(G, ZP, ZaF, ZbF));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_AwesomePackage_rcpp_hello_world", (DL_FUNC) &_AwesomePackage_rcpp_hello_world, 0},
    {"_AwesomePackage_rcpp_update_p_em", (DL_FUNC) &_AwesomePackage_rcpp_update_p_em, 3},
    {"_AwesomePackage_rcpp_update_f_em", (DL_FUNC) &_AwesomePackage_rcpp_update_f_em, 3},
    {"_AwesomePackage_rcpp_psd_loss", (DL_FUNC) &_AwesomePackage_rcpp_psd_loss, 3},
    {"_AwesomePackage_rcpp_update_p_sqp", (DL_FUNC) &_AwesomePackage_rcpp_update_p_sqp, 4},
    {"_AwesomePackage_rcpp_update_f_sqp", (DL_FUNC) &_AwesomePackage_rcpp_update_f_sqp, 4},
    {"_AwesomePackage_rcpp_update_pp", (DL_FUNC) &_AwesomePackage_rcpp_update_pp, 5},
    {"_AwesomePackage_rcpp_update_ff", (DL_FUNC) &_AwesomePackage_rcpp_update_ff, 6},
    {"_AwesomePackage_rcpp_marginal_likelihood_e1", (DL_FUNC) &_AwesomePackage_rcpp_marginal_likelihood_e1, 4},
    {NULL, NULL, 0}
};

RcppExport void R_init_AwesomePackage(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
